labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)')
summary(fit)
data %>%
ggplot(aes(y = log(ratio), x = log(prop_av))) +
geom_point() +
ab_line(intercept = coef(fit[1]), slope = coef(fit[2]))+
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)')
data %>%
ggplot(aes(y = log(ratio), x = log(prop_av))) +
geom_point() +
geom_abline(intercept = coef(fit[1]), slope = coef(fit[2]))+
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)')
?geom_abline
data %>%
ggplot(aes(y = log(ratio), x = log(prop_av))) +
geom_point() +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2])+
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)')
summary(fit)
data %>%
ggplot(aes(y = log(ratio), x = log(prop_av))) +
geom_point() +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]-1) +
geom_line(data = data.frame(x = X), aes(x = log(x), y = (coef(fit)[1] + coef(fit)[2] * log(x))-log(x) )) +
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)')
data %>%
ggplot(aes(y = log(ratio), x = log(prop_av))) +
geom_point() +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]-1) +
#  geom_line(data = data.frame(x = X), aes(x = log(x), y = (coef(fit)[1] + coef(fit)[2] * log(x))-log(x) )) +
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)')
data %>%
ggplot(aes(y = log(ratio), x = log(prop_av))) +
geom_point() +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]-1) +
geom_line(data = data.frame(x = X), aes(x = log(x), y = (coef(fit)[1] + coef(fit)[2] * log(x))-log(x) )) +
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)')
data %>%
ggplot(aes(y = log(ratio), x = log(prop_av))) +
geom_point() +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]-1) +
#  geom_line(data = data.frame(x = X), aes(x = log(x), y = (coef(fit)[1] + coef(fit)[2] * log(x))-log(x) )) +
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)')
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = mean(prop_av), response = inv.logit(empirical_link(fraction_of_clusters, family = binomial(link = 'log')))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'log(q)', y = 'log(p)') +
geom_line(data = data.frame(x = X), aes(x = x, y = inv.logit(coef(fit)[1] + coef(fit)[2] * logit(x))))
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = mean(prop_av), response = inv.logit(empirical_link(fraction_of_clusters, family = binomial(link = 'log')))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'log(q)', y = 'log(p)') +
geom_line(data = data.frame(x = X), aes(x = x, y = exp(coef(fit)[1] + coef(fit)[2] * log(x))))
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = log(mean(prop_av)), response = empirical_link(fraction_of_clusters, family = binomial(link = 'log'))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_smooth(method = glm, se = TRUE, family = binomial(link = 'log'))
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = mean(prop_av), response = inv.logit(empirical_link(fraction_of_clusters, family = binomial(link = 'log')))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'log(q)', y = 'log(p)') +
geom_line(data = data.frame(x = X), aes(x = x, y = exp(coef(fit)[1] + coef(fit)[2] * log(x))))
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = mean(prop_av), response = inv.logit(empirical_link(fraction_of_clusters, family = binomial(link = 'log'))))
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = mean(prop_av), response = exp(empirical_link(fraction_of_clusters, family = binomial(link = 'log')))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'tumorVAF', y = 'log(p)') +
geom_line(data = data.frame(x = X), aes(x = x, y = exp(coef(fit)[1] + coef(fit)[2] * log(x))))
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = log(mean(prop_av)), response = empirical_link(fraction_of_clusters, family = binomial(link = 'log'))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_smooth(method = glm, se = TRUE, family = binomial(link = 'log'))
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = log(mean(prop_av)), response = empirical_link(fraction_of_clusters, family = binomial(link = 'log'))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_smooth(method = glm, se = TRUE, family = binomial(link = 'log'))
data %>%
ggplot(aes(y = log(ratio), x = log(prop_av))) +
geom_point() +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]-1) +
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)')
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = log(mean(prop_av)), response = empirical_link(fraction_of_clusters, family = binomial(link = 'log'))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_smooth(method = glm, se = TRUE, family = binomial(link = 'log'))
data %>%
ggplot(aes(y = log(ratio), x = log(prop_av))) +
geom_point() +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]-1) +
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)')
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = log(mean(prop_av)), response = empirical_link(fraction_of_clusters, family = binomial(link = 'log'))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]-1)
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = log(mean(prop_av)), response = empirical_link(fraction_of_clusters, family = binomial(link = 'log'))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2])
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = log(mean(prop_av)), response = empirical_link(fraction_of_clusters, family = binomial(link = 'log'))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_smooth(method = glm, se = TRUE, family = binomial(link = 'log')) +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2])
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = log(mean(prop_av)), response = empirical_link(fraction_of_clusters, family = binomial(link = 'log'))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2])
data %>%
ggplot(aes(y = log(ratio), x = log(prop_av))) +
geom_point() +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]-1) +
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)')
summary(fit)
library(tidyverse)
setwd('~/Documents/projects/CTC_backup/validation_experiment/')
data <- readRDS('combi_df.rds')
View(data)
data <- data %>% mutate(counts/freq, complexity = as.numeric(complexity))
summary(data)
data2 <- data %>% group_by(observations) %>% slice(rep(1:n(), counts/freq)) %>% mutate(present = row_number() <= first(counts)) %>%
ungroup()
fit <- glm(present ~ log(prop_av), data = data2, family = binomial(link = 'log'))
summary(fit)
confint(fit)
coef(fit)
beta1 <- coef(fit)[2]
beta0 <- coef(fit)[1]
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = log(mean(prop_av)), response = empirical_link(fraction_of_clusters, family = binomial(link = 'log'))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2])
summary(fit)
??bin_by_quantile
library(regressinator)
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = log(mean(prop_av)), response = empirical_link(fraction_of_clusters, family = binomial(link = 'log'))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2])
data %>%
ggplot(aes(y = log(ratio), x = log(prop_av))) +
geom_point() +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]-1) +
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)')
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = log(mean(prop_av)), response = empirical_link(fraction_of_clusters, family = binomial(link = 'log')) - log(mean(prop_av))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2])
data %>%
ggplot(aes(y = log(ratio), x = log(prop_av))) +
geom_point() +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]-1) +
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)')
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = log(mean(prop_av)), response = empirical_link(fraction_of_clusters, family = binomial(link = 'log')) - log(mean(prop_av))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2])
data %>%
ggplot(aes(y = log(ratio), x = log(prop_av))) +
geom_point() +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]-1) +
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)')
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = log(mean(prop_av)), response = empirical_link(fraction_of_clusters, family = binomial(link = 'log')) - log(mean(prop_av))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2])
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = log(mean(prop_av)), response = empirical_link(fraction_of_clusters, family = binomial(link = 'log')) - log(mean(prop_av))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]-1) +
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)')
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = log(mean(prop_av)), response = empirical_link(fraction_of_clusters, family = binomial(link = 'log')) - log(mean(prop_av))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)') +
geom_smooth(method = 'glm',method.args = list(family = binomial(link = 'log')))
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = log(mean(prop_av)), response = empirical_link(fraction_of_clusters, family = binomial(link = 'log')) - log(mean(prop_av))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)') +
geom_smooth(method = 'glm',method.args = list(family = binomial(link = 'log'))) +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]-1) +
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)')
data %>%
ggplot(aes(y = log(ratio), x = log(prop_av))) +
geom_point() +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]-1) +
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)')
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = log(mean(prop_av)), response = empirical_link(fraction_of_clusters, family = binomial(link = 'log')) - log(mean(prop_av))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]-1) +
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)')
data %>%
ggplot(aes(y = log(ratio), x = log(prop_av))) +
geom_point() +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]-1) +
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)')
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = log(mean(prop_av)), response = empirical_link(fraction_of_clusters, family = binomial(link = 'log')) - log(mean(prop_av))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]-1) +
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)')
data %>%
ggplot(aes(y = log(ratio), x = log(prop_av))) +
geom_point() +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]-1) +
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)')
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = log(mean(prop_av)), response = empirical_link(fraction_of_clusters, family = binomial(link = 'log')) - log(mean(prop_av))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]-1) +
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)')
data %>%
ggplot(aes(y = log(freq), x = log(prop_av))) %>%
summarize(x = log(mean(prop_av)), response = empirical_link(fraction_of_clusters, family = binomial(link = 'log'))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2])
data %>%
ggplot(aes(y = log(freq), x = log(prop_av))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2])
data %>%
ggplot(aes(y = log(freq), x = log(prop_av)))
data %>%
ggplot(aes(y = log(freq), x = log(prop_av))) %>%
geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2])
data %>%
ggplot(aes(y = log(freq), x = log(prop_av))) +
geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2])
data %>%
ggplot(aes(y = log(freq), x = log(prop_av))) +
geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]) +
geom_smooth(method = 'glm', se = TRUE, family = binomial(link = 'log'), color = 'red')
data %>%
ggplot(aes(y = freq, x = log(prop_av))) +
geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]) +
geom_smooth(method = 'glm', se = TRUE, family = binomial(link = 'log'), color = 'red')
data %>%
ggplot(aes(y = log(freq), x = log(prop_av))) +
geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]) +
geom_smooth(method = 'glm', se = TRUE, family = binomial(link = 'log'), color = 'red')
data %>%
ggplot(aes(y = log(freq), x = log(prop_av))) +
geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]) +
geom_smooth(method = 'glm', se = TRUE, family = binomial(link = 'log'), color = 'red')
?geom_smooth
data %>%
ggplot(aes(y = log(freq), x = log(prop_av))) +
geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]) +
geom_smooth(method = 'glm', se = TRUE, method.args = list(family = binomial(link = 'log')), color = 'red')
data %>%
ggplot(aes(y = freq, x = log(prop_av))) +
geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]) +
geom_smooth(method = 'glm', se = TRUE, method.args = list(family = binomial(link = 'log')), color = 'red')
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = log(mean(prop_av)), response = empirical_link(fraction_of_clusters, family = binomial(link = 'log'))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2])
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = log(mean(prop_av)), response = empirical_link(fraction_of_clusters, family = binomial(link = 'log'))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2])
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = log(mean(prop_av)), response = empirical_link(fraction_of_clusters, family = binomial(link = 'log'))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]) +
geom_smooth(method = 'glm', se = TRUE, method.args = list(family = binomial(link = 'log')), color = 'red')
data %>%
ggplot(aes(y = freq, x = log(prop_av))) +
geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2])
data %>%
ggplot(aes(y = log(freq), x = log(prop_av))) +
geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2])
data %>%
ggplot(aes(y = log(ratio), x = log(prop_av))) +
geom_point() +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]-1) +
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)')
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = log(mean(prop_av)), response = empirical_link(fraction_of_clusters, family = binomial(link = 'log'))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2])
data %>%
ggplot(aes(y = log(freq), x = log(prop_av))) +
geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2])
data2 %>% group_by(prop_av) %>% dplyr::summarize(fraction_of_clusters = sum(present)/n()) %>%
bin_by_quantile(prop_av, breaks = 100) %>%
summarize(x = log(mean(prop_av)), response = empirical_link(fraction_of_clusters, family = binomial(link = 'log'))) %>%
ggplot(aes(x = x, y = response)) + geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2])
data %>%
ggplot(aes(y = log(freq), x = log(prop_av))) +
geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2])
data %>%
ggplot(aes(y = log(freq), x = log(prop_av))) +
geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2])
data %>%
ggplot(aes(y = log(ratio), x = log(prop_av))) +
geom_point() +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]-1) +
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)')
summary(fit)
library(tidyverse)
setwd('~/Documents/projects/CTC_backup/validation_experiment/')
data <- readRDS('combi_df.rds')
View(data)
data <- data %>% mutate(counts/freq, complexity = as.numeric(complexity))
summary(data)
data2 <- data %>% group_by(observations) %>% slice(rep(1:n(), counts/freq)) %>% mutate(present = row_number() <= first(counts)) %>%
ungroup()
fit <- glm(present ~ log(prop_av), data = data2, family = binomial(link = 'log'))
summary(fit)
confint(fit)
coef(fit)
data %>%
ggplot(aes(y = log(freq), x = log(prop_av))) +
geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2])
data %>%
ggplot(aes(y = log(ratio), x = log(prop_av))) +
geom_point() +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]-1) +
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)')
summary(fit)
data %>%
ggplot(aes(y = log(freq), x = log(prop_av))) +
geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2])
data %>%
ggplot(aes(y = log(ratio), x = log(prop_av))) +
geom_point() +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]-1) +
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)')
fit <- glm(present ~ log(prop_av), data = data2, family = binomial(link = 'log'))
fit
summary(fit)
confint(fit)
summary(fit)
summary(fit)
(coef(fit)[1]-1)/summary(fit)$coefficients['log(prop_av)','Std. Error'])
coef(fit)[1]-1)/summary(fit)$coefficients['log(prop_av)','Std. Error'])
coef(fit)[1]-1)/summary(fit)$coefficients['log(prop_av)','Std. Error']
(coef(fit)[1]-1)/summary(fit)$coefficients['log(prop_av)','Std. Error']
critical_value <- qt(0.975, df)
df <- nrow(data)-ncol(model.matrix(fit))
df
df <- nrow(data2)-ncol(model.matrix(fit))
df
summary(fit)
critical_value <- qt(0.975, df)
critical_value
t-value <- (coef(fit)[1]-1)/summary(fit)$coefficients['log(prop_av)','Std. Error']
t-value
t-value <- (coef(fit)[1]-1)/summary(fit)$coefficients['log(prop_av)','Std. Error']
t.value <- (coef(fit)[1]-1)/summary(fit)$coefficients['log(prop_av)','Std. Error']
df <- nrow(data2)-ncol(model.matrix(fit))
p.value <- 2* pt(0.975, df)
p.value <- 2* 1-pt(abs(t.value), df)
p.value
t.value <- (coef(fit)[2]-1)/summary(fit)$coefficients['log(prop_av)','Std. Error']
coef(fit)
t.value <- (coef(fit)['log(prop_av)']-1)/summary(fit)$coefficients['log(prop_av)','Std. Error']
t.value
coef(fit)['log(prop_av)']
t.value <- (coef(fit)['log(prop_av)']-1)/summary(fit)$coefficients['log(prop_av)','Std. Error']
df <- nrow(data2)-ncol(model.matrix(fit))
p.value <- 2* 1-pt(abs(t.value), df)
p.value
summary(fit)
df
p.value <- 2* (1-pt(abs(t.value), df))
p.value
p.value <- 2* (1-pt(abs(t.value), df))
pt(abs(t.value), df)
p.value <- 2* (1-pt(abs(t.value), df))
fit <- glm(present ~ log(prop_av), data = data2, offset = 1,family = binomial(link = 'log'))
t.value <- (coef(fit)['log(prop_av)']-1)/summary(fit)$coefficients['log(prop_av)','Std. Error']
t.value
p.value <- 2* (1-pt(abs(t.value), df))
p.value
t.value
df
coef(fit)
coef(fit)['log(prop_av)']
coef(fit)['log(prop_av)']-1)
summary(fit)$coefficients['log(prop_av)','Std. Error']
?confint
confint(fit, level = 0.99999999)
confint(fit, level = 0.999999999999)
?glm
fit <- glm(present ~ log(prop_av), offset = 1,data = data2, family = binomial(link = 'log'))
fit <- glm(present ~ log(prop_av), data = data2, family = binomial(link = 'log'))
t.value <- (coef(fit)['log(prop_av)']-1)/summary(fit)$coefficients['log(prop_av)','Std. Error']
df <- nrow(data2)-ncol(model.matrix(fit))
p.value <- 2* (1-pt(abs(t.value), df))
p.value
summary(fit)
p.value <- 2.2e-16
p.value <- 2* (1-pt(abs(t.value), df))
print(p.value)
p.value <- 2.2e-16
t
t
t
t
library(tidyverse)
setwd('~/Documents/projects/CTC_backup/validation_experiment/')
data <- readRDS('combi_df.rds')
View(data)
data <- data %>% mutate(counts/freq, complexity = as.numeric(complexity))
summary(data)
data2 <- data %>% group_by(observations) %>% slice(rep(1:n(), counts/freq)) %>% mutate(present = row_number() <= first(counts)) %>%
ungroup()
fit <- glm(present ~ log(prop_av), data = data2, family = binomial(link = 'log'))
summary(fit)
confint(fit)
coef(fit)
data %>%
ggplot(aes(y = log(freq), x = log(prop_av))) +
geom_point() +
labs(x = 'log(tumorVAF)', y = 'log(fraction among CTC clusters)') +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2])
data %>%
ggplot(aes(y = log(ratio), x = log(prop_av))) +
geom_point() +
geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2]-1) +
labs(x = 'log(tumorVAF)', y = 'log(fold-change in prevalence)')
summary(fit)
t.value <- (coef(fit)['log(prop_av)']-1)/summary(fit)$coefficients['log(prop_av)','Std. Error']
df <- nrow(data2)-ncol(model.matrix(fit))
p.value <- 2* (1-pt(abs(t.value), df))
print(p.value)
